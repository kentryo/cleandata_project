install.packaes("devtools")
intall.packages("devtools")
install.packages("devtools")
find.package("detools")
find.package("devtools")
install.packages("devtools")
library(detools)
library(devtools)
find_rtools()
install.packages("Kernsmoooth")
install.packages("KernSmooth")
library(KernSmooth)
x <- 4L
class(x)
x <- c(4,"a",TRUE)
class(x)
x <-(1,3,5)
x <- c(1,3,5)
y <- c(3,2,10)
cbind(x,y)
x <- 1:4
class(x)
x <- c(3, 5, 1, 10, 12, 6)
x[x >= 6] <- 0
x
x[x %in% 1:5] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x
? %in%
?%in%
?read.csv
read.csv(C:\Users\Kent Huang\Desktop\hw1_data.csv)
x <- read.csv("C:\Users\Kent Huang\Desktop\hw1_data.csv")
getwd()
ls()
clear
x <- read.csv(\hw1_data.csv)
list()
dir()
x <- read.csv("hw1_data.csv")
x
x[c(1,2),]
row(x)
x
x[c(152,153),]
x[c(47,1)]
x[47,1]
y <- x[,1]
y
bad <- is.na(y)
ad
bad
sum(bad)
sum(!bad)
z <- y[!bad]
mean(z)
x
a <- x[x[,1]>31]
a <- x[x[,1]>31]
class(x)
x.sub1 <- subset(x, Ozone > 31 & Temp > 90)
x.sub1
mean(x.sub1[&Solar.R])
x.sub1&Solar.R
x.sub1$Solar.R
mean(x.sub1$Solar.R)
x.sub2 <- subset(x, Month == 6)
mean(x.sub2$Temp)
x.sub2 <- subset(x, Month == 5)
max(x.sub2$Ozone)
x.sub2
?max
?complete.cases
max(x.sub2[,1])
good <- complete.cases(x.sub2)
good
x.sub2[good,]
x.sub3 <- x.sub2[good,]
max(s.xub3$Ozone)
max(x.sub3$Ozone)
clear
clear()
swirl()
library(swirl)
ls()
rm(list=ls())
ls()
swirl()
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
?identical
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attriutes(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
matrix(1:20, nrow=4, ncol=5)
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(my_matrix, patients)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5!=7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
?isTRUE
identical('twins', 'twins')
xor(5==6, !FALSE)
ints <-sample(10)
sample
ints
ints >5
which(ints > 7)
any(ints<0)
all(ints>0)
0
quit()
set.seed(1)
rpois(5, 2)
?rpois
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
plot(y,x)
plot(x,y)
library("swirl"0
library("swirl")
rm(list=ls())
swirl()
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist
)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col =2)
plot(cars, xlim = c(10, 15))
plot(cars, pch =2)
data(mtcars)
?boxplot
boxplot(mpg ~ cyl)
boxplot(mtcar, mpg ~ cyl)
boxplot(mpg ~ cyl data = mtcars)
boxplot(mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
q()
?download.file
dir()
setwd("./cleandata")
dir()
setwd("./cleandata_project\UCI HAR Dataset")
setwd("./cleandata_project/UCI HAR Dataset")
setwd("./cleandata_project/UCI HAR Dataset")
setwd("E:\Documents\Cleandata\cleandata_project")
setwd("E:/Documents/Cleandata/cleandata_project")
dir()
read.csv("./UCI HAR Dataset/train/X_train.txt")
X_train <- read.csv("./UCI HAR Dataset/train/X_train.txt")
View(X_train)
head(X_train)
dim(X_train)
subject_train <- read.csv("./UCI HAR Dataset/train/subject_train.txt")
names(subject_train)
head(subject_train)
